<UserControl
    x:Class="InfoPanel.Views.Components.DisplayItems"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:app="clr-namespace:InfoPanel"
    xmlns:components="clr-namespace:InfoPanel.Views.Components"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:InfoPanel"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
    mc:Ignorable="d">

    <Grid Margin="10,10,10,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    TextAlignment="Right">
                    <Bold FontSize="20" FontWeight="Medium">Panel Items</Bold><LineBreak />
                </TextBlock>

                <ComboBox
                    Name="ComboBoxSelectedProfile"
                    Grid.Column="1"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding Source={x:Static local:ConfigModel.Instance}, Path=Profiles}"
                    SelectedItem="{Binding Source={x:Static local:SharedModel.Instance}, Path=SelectedProfile}" />
            </Grid>
        </StackPanel>

        <Grid Grid.Row="1" Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />

            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="5,0,10,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="230" />
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Foreground="{DynamicResource TextFillColorSecondaryBrush}">
                        <TextBlock
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Text="Type" />
                    </Label>
                    <Label Grid.Column="1">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                            Text="Name" />
                    </Label>
                    <Label Grid.Column="2">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                            Text="Source" />
                    </Label>
                    <Label Grid.Column="3">
                        <TextBlock>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                Text="X, Y" />
                        </TextBlock>
                    </Label>
                    <Label Grid.Column="4">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                            Text="Enabled" />
                    </Label>
                </Grid>

                <ListView
                    Name="ListViewItems"
                    Grid.Row="1"
                    Width="auto"
                    ItemsSource="{Binding Source={x:Static app:SharedModel.Instance}, Path=DisplayItems}"
                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                    SelectedItem="{Binding Source={x:Static app:SharedModel.Instance}, Path=SelectedItem}"
                    SelectionChanged="ListViewItems_SelectionChanged"
                    SelectionMode="Extended">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Margin" Value="0,0,0,5" />
                            <Setter Property="IsSelected" Value="{Binding Selected}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="230" />
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="80" />
                                    <ColumnDefinition Width="40" />
                                </Grid.ColumnDefinitions>
                                <ui:SymbolIcon
                                    Grid.Column="0"
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center">
                                    <ui:SymbolIcon.Style>
                                        <Style BasedOn="{StaticResource {x:Type ui:SymbolIcon}}" TargetType="{x:Type ui:SymbolIcon}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Kind}" Value="Text">
                                                    <Setter Property="Symbol" Value="Text16" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Image">
                                                    <Setter Property="Symbol" Value="Image20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Sensor">
                                                    <Setter Property="Symbol" Value="Temperature20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Table">
                                                    <Setter Property="Symbol" Value="Table20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Clock">
                                                    <Setter Property="Symbol" Value="Clock20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Calendar">
                                                    <Setter Property="Symbol" Value="Calendar3Day20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Graph">
                                                    <Setter Property="Symbol" Value="DataBarVertical20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Bar">
                                                    <Setter Property="Symbol" Value="DataBarHorizontal20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Donut">
                                                    <Setter Property="Symbol" Value="DataPie20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Gauge">
                                                    <Setter Property="Symbol" Value="Gauge20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Sensor Image">
                                                    <Setter Property="Symbol" Value="CircleImage20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Http Image">
                                                    <Setter Property="Symbol" Value="WebAsset20" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ui:SymbolIcon.Style>
                                </ui:SymbolIcon>
                                <Label
                                    Grid.Column="1"
                                    Margin="0,0,10,0"
                                    VerticalAlignment="Center">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        Text="{Binding Name}"
                                        TextTrimming="CharacterEllipsis" />
                                </Label>
                                <Image
                                    Grid.Column="2"
                                    Width="20"
                                    Height="20"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SensorType, FallbackValue=Default}" Value="HwInfo">
                                                    <Setter Property="Source" Value="/InfoPanel;component/Resources/Images/hwinfo_icon.ico" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SensorType, FallbackValue=Default}" Value="Libre">
                                                    <Setter Property="Source" Value="/InfoPanel;component/Resources/Images/libre_icon.ico" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <!--<ui:SymbolIcon Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0">
                                    <ui:SymbolIcon.Style>
                                        <Style TargetType="{x:Type ui:SymbolIcon}" BasedOn="{StaticResource {x:Type ui:SymbolIcon}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SensorType}" Value="HwInfo">
                                                    <Setter Property="Symbol" Value="HardDrive20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SensorType}" Value="Libre">
                                                    <Setter Property="Symbol" Value="HardDrive20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SensorType, FallbackValue=Default}" Value="Default">
                                                    <Setter Property="Symbol" Value="Text16" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ui:SymbolIcon.Style>
                                </ui:SymbolIcon>-->
                                <Label Grid.Column="3" VerticalAlignment="Center">
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0}, {1}">
                                                <Binding Path="X" />
                                                <Binding Path="Y" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </Label>
                                <Label Grid.Column="4" VerticalAlignment="Center">
                                    <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Hidden, Converter={StaticResource InverseBooleanConverter}}" />
                                </Label>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <StackPanel
                Grid.Column="1"
                Margin="10,0,0,0"
                VerticalAlignment="Bottom">
                <ui:Button
                    x:Name="ButtonPushBack"
                    Margin="0,10,0,0"
                    Click="ButtonPushBack_Click"
                    Content=""
                    Icon="ArrowUpload20"
                    IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}"
                    ToolTip="Push selected item to the back (overlapped by items below)" />
                <ui:Button
                    x:Name="ButtonPushUp"
                    Margin="0,10,0,0"
                    Click="ButtonPushUp_Click"
                    Content=""
                    Icon="ArrowUp20"
                    IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}"
                    ToolTip="Push selected item backwards 1 level (overlapped by items below)" />
                <ui:Button
                    x:Name="ButtonPushDown"
                    Margin="0,10,0,0"
                    Click="ButtonPushDown_Click"
                    Content=""
                    Icon="ArrowDown20"
                    IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}"
                    ToolTip="Bring selected item forward 1 level (overlap items above)" />
                <ui:Button
                    x:Name="ButtonPushFront"
                    Margin="0,10,0,0"
                    Click="ButtonPushFront_Click"
                    Content=""
                    Icon="ArrowDownload20"
                    IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}"
                    ToolTip="Bring selected item to front (overlap items above)" />
                <ui:Button
                    x:Name="ButtonDuplicate"
                    Margin="0,10,0,0"
                    Click="ButtonDuplicate_Click"
                    Content=""
                    Icon="Copy20"
                    IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}"
                    ToolTip="Duplicate selected item" />
                <ui:Button
                    x:Name="ButtonDelete"
                    Margin="0,10,0,0"
                    Appearance="Danger"
                    Click="ButtonDelete_Click"
                    Content=""
                    Icon="Delete20"
                    IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}"
                    ToolTip="Delete selected item" />
            </StackPanel>


            <components:CommonProperties Grid.Column="2" Margin="10,0,0,0" />
        </Grid>

        <Separator Grid.Row="2" Margin="0,5,0,0" />

        <Grid
            Grid.Row="4"
            Margin="0,10,0,10"
            HorizontalAlignment="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <ui:Button
                x:Name="ButtonSave"
                Grid.Column="0"
                Width="140"
                Margin="0,0,0,0"
                Appearance="Primary"
                Click="ButtonSave_Click"
                Content="Save"
                ToolTip="Make your changes permanent" />
            <ui:Button
                x:Name="ButtonReload"
                Grid.Column="1"
                Margin="10,0,0,0"
                Appearance="Danger"
                Click="ButtonReload_Click"
                Content=""
                Icon="ArrowUndo20"
                ToolTip="Discard all changes and reload from disk" />
        </Grid>
    </Grid>
</UserControl>
