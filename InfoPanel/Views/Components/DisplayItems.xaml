<UserControl x:Class="InfoPanel.Views.Components.DisplayItems"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:InfoPanel"
             xmlns:components="clr-namespace:InfoPanel.Views.Components"
             xmlns:app="clr-namespace:InfoPanel"
             mc:Ignorable="d" 
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             Foreground="{DynamicResource TextFillColorSecondaryBrush}">

    <Grid Margin="10,10,10,10" Grid.IsSharedSizeScope="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row= "0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Right">
                 <Bold FontWeight="Medium" FontSize="20">Panel Items</Bold><LineBreak/>
                </TextBlock>
                <ComboBox Name="ComboBoxSelectedProfile" Grid.Column="1" Margin="0,0,0,10"
                      ItemsSource="{Binding Source={x:Static local:ConfigModel.Instance}, Path=Profiles}" DisplayMemberPath="Name" 
                  SelectedItem="{Binding Source={x:Static local:SharedModel.Instance}, Path=SelectedProfile}"/>
            </Grid>
        </StackPanel>

        <Grid Grid.Row="1" Margin="0,5,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" SharedSizeGroup="A"/>
                <ColumnDefinition Width="50"/>
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="5,0,10,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"  Foreground="{DynamicResource TextFillColorSecondaryBrush}">
                        <TextBlock Grid.Column="0" Text="Type" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Label>
                    <Label Grid.Column="1">
                        <TextBlock  Text="Name" VerticalAlignment="Center" HorizontalAlignment="Center"  Foreground="{DynamicResource TextFillColorSecondaryBrush}"/>
                    </Label>
                    <Label Grid.Column="2">
                        <TextBlock>
                            <TextBlock  Text="X, Y" VerticalAlignment="Center" HorizontalAlignment="Center"  Foreground="{DynamicResource TextFillColorSecondaryBrush}"/>
                        </TextBlock>
                    </Label>
                    <Label Grid.Column="3">
                        <TextBlock  Text="Enabled" VerticalAlignment="Center" HorizontalAlignment="Center"  Foreground="{DynamicResource TextFillColorSecondaryBrush}"/>
                    </Label>
                </Grid>

                <ListView Name="ListViewItems" Grid.Row="1" 
                                  ItemsSource="{Binding Source={x:Static app:SharedModel.Instance}, Path=DisplayItems}" 
                                  SelectedItem="{Binding Source={x:Static app:SharedModel.Instance}, Path=SelectedItem}"
                                  SelectionChanged="ListViewItems_SelectionChanged"
                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                                  SelectionMode="Extended">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Margin" Value="0,0,0,5" />
                            <Setter Property="IsSelected" Value="{Binding Selected}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="50"/>
                                </Grid.ColumnDefinitions>
                                <ui:SymbolIcon Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0">
                                    <ui:SymbolIcon.Style>
                                        <Style TargetType="{x:Type ui:SymbolIcon}" BasedOn="{StaticResource {x:Type ui:SymbolIcon}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Kind}" Value="Text">
                                                    <Setter Property="Symbol" Value="Text16" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Image">
                                                    <Setter Property="Symbol" Value="Image20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Sensor">
                                                    <Setter Property="Symbol" Value="Temperature20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Clock">
                                                    <Setter Property="Symbol" Value="Clock20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Calendar">
                                                    <Setter Property="Symbol" Value="Calendar3Day20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Graph">
                                                    <Setter Property="Symbol" Value="DataBarVertical20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Bar">
                                                    <Setter Property="Symbol" Value="DataBarHorizontal20" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Kind}" Value="Gauge">
                                                    <Setter Property="Symbol" Value="Gauge20" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ui:SymbolIcon.Style>
                                </ui:SymbolIcon>
                                <Label Grid.Column="1" VerticalAlignment="Center" Margin="0,0,10,0">
                                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                </Label>
                                <Label Grid.Column="2" VerticalAlignment="Center">
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0}, {1}">
                                                <Binding Path="X" />
                                                <Binding Path="Y" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </Label>
                                <Label Grid.Column="3" VerticalAlignment="Center">
                                    <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Hidden, Converter={StaticResource InverseBooleanConverter}}"/>
                                </Label>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="10,0,0,0">
                <ui:Button x:Name="ButtonPushBack" Icon="ArrowUpload20" Margin="0,10,0,0"
                           ToolTip="Push selected item to the back (overlapped by items below)" Content=""
                           IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}" Click="ButtonPushBack_Click"/>
                <ui:Button x:Name="ButtonPushUp" Icon="ArrowUp20" Margin="0,10,0,0"
                           ToolTip="Push selected item backwards 1 level (overlapped by items below)" Content=""
                           IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}" Click="ButtonPushUp_Click"/>
                <ui:Button x:Name="ButtonPushDown" Icon="ArrowDown20" Margin="0,10,0,0"
                           ToolTip="Bring selected item forward 1 level (overlap items above)" Content=""
                           IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}" Click="ButtonPushDown_Click"/>
                <ui:Button x:Name="ButtonPushFront" Icon="ArrowDownload20" Margin="0,10,0,0" 
                           ToolTip="Bring selected item to front (overlap items above)" Content=""
                           IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}" Click="ButtonPushFront_Click"/>
                <ui:Button x:Name="ButtonDuplicate" Icon="Copy20" Margin="0,10,0,0" 
                           ToolTip="Duplicate selected item" Content=""
                           IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}" Click="ButtonDuplicate_Click"/>
                <ui:Button x:Name="ButtonDelete" Icon="Delete20" Appearance="Danger" Margin="0,10,0,0"
                        ToolTip="Delete selected item" Content="" Click="ButtonDelete_Click"
                           IsEnabled="{Binding Source={x:Static app:SharedModel.Instance}, Path=IsItemSelected}"/>
            </StackPanel>
        </Grid>

        <Separator Grid.Row="2" Margin="0,5,0,0"/>

        <Grid Grid.Row="3" Margin="0,10,0,0">
            <Expander Header="Placement Control">
                <components:CommonProperties/>
            </Expander>
        </Grid>

        <Grid Grid.Row="4" Margin="0,10,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" SharedSizeGroup="A"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <ui:Button x:Name="ButtonSave" Grid.Column="0" HorizontalAlignment="Left" Content="Save" Appearance="Primary"
                       ToolTip="Make your changes permanent" Click="ButtonSave_Click" Margin="0,0,0,0" Width="150"/>
            <ui:Button x:Name="ButtonReload" Grid.Column="1" Icon="ArrowUndo20" Appearance="Danger" Content=""
                     ToolTip="Discard all changes and reload from disk" Click="ButtonReload_Click" Margin="10,0,0,0"/>
        </Grid>

    </Grid>



</UserControl>
