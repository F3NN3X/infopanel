<Window x:Class="InfoPanel.ProfileWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Light"
        TextElement.FontSize="14"
        FontFamily="NunitoSansRegular"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource self}}"
        WindowStartupLocation="CenterOwner" ResizeMode="NoResize"
        Title="Edit Profile" Width="400" SizeToContent="Height">


    <!--<materialDesign:DialogHost Grid.Row="0" Margin="0,0,0,0">
        <materialDesign:DialogHost.DialogContent>
            <Grid Width="250" Margin="10,10,10,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" TextWrapping="Wrap">
                     All settings and items associated with this profile will be removed.
                    <LineBreak/> <LineBreak/>
                    This action cannot be undone.
                </TextBlock>
                <Grid Grid.Row="1" Margin="0,20,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" x:Name="ButtonDeleteProfile" Style="{DynamicResource MaterialDesignRaisedAccentButton}" Margin="0,0,10,0"
                    Content="Delete" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Click="ButtonDeleteProfile_Click"/>
                    <Button Grid.Column="1" Content="Cancel" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="0,0,0,0"/>
                </Grid>
            </Grid>
        </materialDesign:DialogHost.DialogContent>-->
        <!-- put the content over which the dialog is shown here (e.g. your main window grid)-->

        <Grid Margin="10,10,10,10" VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Grid Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" FontSize="20" Content="Edit Profile" FontWeight="Medium"/>
                <Button Grid.Column="1" x:Name="ButtonExportProfile" Margin="10,0,0,0" ToolTip="Export Profile"
                     Click="ButtonExportProfile_Click"/>
                <!--<Button Grid.Column="2" Visibility="{Binding DeletionAllowed, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" Style="{DynamicResource MaterialDesignRaisedAccentButton}" VerticalAlignment="Center"
                     Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    ToolTip="Delete profile"  Margin="10,0,0,0"/>-->
            </Grid>

            <StackPanel Grid.Row="2" Margin="0,10,0,0">

                <!--<Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="TextBoxGuid" Grid.Column="0" 
                     materialDesign:HintAssist.HelperText="Filename"
                     Text="{Binding Path=Profile.Guid,  StringFormat={}{0}.xml}" IsReadOnly="True"
                     Margin="0,0,0,20"/>
                <Button x:Name="ButtonDelete" Grid.Column="1" Style="{DynamicResource MaterialDesignRaisedAccentButton}"
                    Content="{materialDesign:PackIcon Kind=Trash}" ToolTip="Delete profile" Click="ButtonDelete_Click" Margin="10,0,0,0"/>
            </Grid>-->

                <TextBox x:Name="TextBoxName" MaxLength="25"
                     Text="{Binding Path=Profile.Name}"
                     Margin="0,0,0,20"/>
            </StackPanel>

            <StackPanel Grid.Row="3">
                <Grid Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Column="0" Content="Show panel" IsChecked="{Binding Path=Profile.Active}"/>
                    <CheckBox Grid.Column="1" Content="Always on top" IsChecked="{Binding Path=Profile.Topmost}"/>
                </Grid>


                <Grid Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Column="1" Content="Resizeable" IsEnabled="{Binding Path=Profile.Active}" IsChecked="{Binding Path=Profile.Resize}"/>
                    <CheckBox Grid.Column="0" Content="Draggable" IsEnabled="{Binding Path=Profile.Active}" IsChecked="{Binding Path=Profile.Drag}"/>
                </Grid>
            </StackPanel>

            <Grid Grid.Row="4" Margin="0,10,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="TextBoxWidth" Grid.Column="0" 
                     Text="{Binding Path=Profile.Width}"
                     Margin="0,0,10,20"/>
                <TextBox x:Name="TextBoxHeight" Grid.Column="1" 
                     Text="{Binding Path=Profile.Height}"
                     Margin="0,0,10,20"/>
                <Button Grid.Column="2" Name="ButtonMaximise" Content=""
                    IsEnabled="{Binding Path=Profile.Active}"
                    ToolTip="Fill screen" Margin="0,0,0,0" Click="ButtonMaximise_Click"/>
            </Grid>

            <Grid Grid.Row="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="TextBoxWindowName" Grid.Column="0"
                     IsEnabled="{Binding Path=Profile.Active}"
                     IsReadOnly="True"
                     Text="{Binding Path=Profile.TargetWindow.Name, Mode=OneWay}"
                     Margin="0,0,10,20"/>
                <TextBox x:Name="TextBoxStartX" Grid.Column="1"
                     IsEnabled="{Binding Path=Profile.Active}"
                     Text="{Binding Path=Profile.WindowX}"
                     Margin="0,0,10,20"/>
                <TextBox x:Name="TextBoxStartY" Grid.Column="2" 
                    IsEnabled="{Binding Path=Profile.Active}"
                     Text="{Binding Path=Profile.WindowY}"
                     Margin="0,0,0,20"/>
                <Button Grid.Column="3" Name="ButtonResetPosition" 
                            IsEnabled="{Binding Path=Profile.Active}"
                    ToolTip="Reset window location to top left of main screen" Margin="10,0,0,0" Click="ButtonResetPosition_Click"/>
            </Grid>


            <StackPanel Grid.Row="6">
                <Rectangle HorizontalAlignment="Stretch" Height="1" Margin="-10,10,-10,10" Stroke="DarkGray" />
                <Label Grid.Row="0" FontSize="20" Content="Item Defaults" FontWeight="Medium" Margin="0,0,0,10"/>
            </StackPanel>

            <metro:ColorPicker Grid.Row="7"  Background="Transparent" Height="40"
                               metro:TextBoxHelper.UseFloatingWatermark="True"
                               metro:TextBoxHelper.Watermark="Panel background color"
                               SelectedColor="{Binding Profile.BackgroundColor}"/>

            <metro:ColorPicker Grid.Row="8"  Background="Transparent" Height="40" Margin="0,10,0,0"
                               BorderThickness="1"
                               metro:TextBoxHelper.UseFloatingWatermark="True"
                               metro:TextBoxHelper.Watermark="Text color"
                               SelectedColor="{Binding Profile.Color}"/>

            <Grid Grid.Row="9" VerticalAlignment="Center" Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ComboBox Grid.Column="0" Background="Transparent"
          xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
          ItemTemplate="{DynamicResource FontTemplate}" SelectedValue="{Binding Path=Profile.Font}" SelectedValuePath="Source" Margin="0,10,0,20">
                    <ComboBox.Resources>

                        <CollectionViewSource x:Key="myFonts" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
                            <CollectionViewSource.SortDescriptions>
                                <ComponentModel:SortDescription PropertyName="Source" />
                            </CollectionViewSource.SortDescriptions>
                        </CollectionViewSource>

                        <Style x:Key="FontStyle">
                            <Setter Property="Control.FontFamily" Value="{Binding Source}" />
                            <Setter Property="Control.FontSize" Value="16" />
                        </Style>

                        <DataTemplate x:Key="FontTemplate">
                            <StackPanel VirtualizingStackPanel.IsVirtualizing="True">
                                <TextBlock Style="{StaticResource FontStyle}"
                           Text="{Binding Source}"
                           ToolTip="{Binding Source}" />
                            </StackPanel>
                        </DataTemplate>

                    </ComboBox.Resources>

                    <ComboBox.ItemsSource>
                        <Binding Source="{StaticResource myFonts}" />
                    </ComboBox.ItemsSource>
                </ComboBox>

                <metro:NumericUpDown Grid.Column="1" Width="100" Height="30" Margin="10,0,0,12" 
                                     Background="Transparent" BorderThickness="0,0,0,1"
                                     FontSize="14"
                                     Minimum="1" Maximum="999" Interval="1"
                                     Value="{Binding Profile.FontSize}" TextAlignment="Center"/>
            </Grid>

        

            <Grid Grid.Row="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Button x:Name="ButtonSave" Grid.Column="0" Content="Save and close" ToolTip="Make your changes permanent" Click="ButtonSave_Click"/>
                <Button x:Name="ButtonReload" Grid.Column="1" 
                     ToolTip="Discard all changes and reload from disk" Margin="10,0,0,0" Click="ButtonReload_Click"/>
            </Grid>
        </Grid>
    <!--</materialDesign:DialogHost>-->
</Window>
