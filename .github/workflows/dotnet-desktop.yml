# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: '**'
    tags: '*'
  pull_request:
    branches: '**'

jobs:
  build:

    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x         

    # - name: Build InfoPanel
    #   run: |
    #     dotnet restore
    #     dotnet publish -p:PublishProfile=FolderProfile   

    - name: Build Plugins folder
      run: |
        # Define paths
          $solutionPath = "${{ github.workspace }}/CommunityPlugins/CommunityPlugins.sln"
          $baseOutputDir = "${{ github.workspace }}/output/CommunityPlugins"
          
          # Build the solution to default output directories
          Write-Host "Building solution: $solutionPath"
          dotnet build $solutionPath --configuration Release
          
          # Create base output directory
          New-Item -Path $baseOutputDir -ItemType Directory -Force
          
          # Find all .csproj files and move their outputs to individual folders
          Get-ChildItem -Path "${{ github.workspace }}/CommunityPlugins" -Recurse -Filter "*.csproj" | ForEach-Object {
            $projectDir = $_.DirectoryName
            $projectName = [System.IO.Path]::GetFileNameWithoutExtension($_.Name)
            $defaultOutput = Join-Path $projectDir "bin/Release/net8.0-windows" # Adjust if using Debug
            $targetOutput = Join-Path $baseOutputDir $projectName
            
            if (Test-Path $defaultOutput) {
              Write-Host "Copying output from $defaultOutput to $targetOutput"
              New-Item -Path $targetOutput -ItemType Directory -Force
              Copy-Item -Path "$defaultOutput/*" -Destination $targetOutput -Recurse -Force
            } else {
              Write-Host "No output found for $projectName at $defaultOutput"
            }
          }
          
          # Optional: List the organized outputs
          Get-ChildItem -Path $baseOutputDir -Directory | ForEach-Object {
            Write-Host "Contents of $($_.Name):"
            Get-ChildItem -Path $_.FullName
          } 

    - name: Install and Compile Inno Setup Installer
      shell: powershell
      run: |
        cd ${{ github.workspace }}\InnoSetup
        iscc "setup.iss"  
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: InfoPanel
        path:  "${{ github.workspace }}/build/"

    - name: Upload Artifact Setup
      uses: actions/upload-artifact@v4
      with:
        name: InfoPanel-Setup
        path:  "${{ github.workspace }}/InnoSetup/Output/InfoPanelSetup.exe"           

###################################
# Everything below is only for tagged Releases
# be sure to add this to force it to be for tags only
# if: startsWith(github.ref, 'refs/tags/')
##################################                      
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      id: upload-release-asset
      uses: ncipollo/release-action@v1
      with:        
        artifacts: ${{ github.workspace }}/InnoSetup/Output/InfoPanelSetup.exe
        generateReleaseNotes: true

